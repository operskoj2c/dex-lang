Int = %Int
Real = %Real
Type = %TyKind

(+) : (Real -> Real -> Real) =
  \x. \y. %fadd x y

iadd : (Int -> Int -> Int) =
  \x. \y. %iadd x y

:p iadd 3 (iadd 4 5)
> 12

depId : (a:Type -> a -> a) = \a. \x. x

:p depId Int 1
> 1

returnFirstArg : (a:Type -> b:Type -> a -> b -> a) =
  \a. \b. \x. \y. x

:p returnFirstArg Int Real 1 2.0
> 1

:p 1.0 + 2.0
> 3.0

:p (+) 1.0 2.0
> 3.0

:p 1 `iadd` 3
> 4

idExplicit = \a:Type. \x:a. x
:p idExplicit Int 1
> 1

idImplicit = \{a:Type}. \x:a. x
:p idImplicit 1
> 1

idImplicit2 : ({a:Type} -> a -> a) = \x. x
:p idImplicit2 1
> 1

:p
  idImplicit3 : ({a:Type} -> a -> a) = \x. x
  idImplicit3 1
> 1
