' # Cholesky Factorization
https://en.wikipedia.org/wiki/Cholesky_decomposition

' ## Helpers

' ### Matrix Math

eye : n=>n=>Real
eye = for i j. select (i == j) 1.0 0.0

mmadd: (n=>m=>Real)->(n=>m=>Real)->(n=>m=>Real)
mmadd x y = for i j. x.i.j + y.i.j

' ## Cholesky Algorithm

chol : (n=>n=>Real) -> (n=>n=>Real)
chol x = snd $ runState (for _ _. 0.0) \buf.
  for i.
    for j':(...i).
      j = %inject(j')
      row  = for k:(..<j). getAt2 buf i %inject(k)
      row' = for k:(..<j). getAt2 buf j %inject(k)
      a = x.i.j - vdot row row'
      b = getAt2 buf j j
      putAt2 buf i j $ select (i==j) (sqrt a) (a / b)
    ()

' Test

demoPSDMatrix: Key -> n=>n=>Real
demoPSDMatrix key =
  a = for i:n j:n. randn $ ixkey2 key i j
  x = mmp a (transpose a)
  mmadd x eye

psd = demoPSDMatrix @5 (newKey 1)
:p psd
> [ [5.0101504, 8.795412e-2, 0.7408708, -7.481893e-2, -1.1080669]
> , [8.795412e-2, 4.527965, 1.3578157, -1.6046677, -1.2366911]
> , [0.7408708, 1.3578157, 4.7222195, -1.1773552, 1.6373565]
> , [-7.481893e-2, -1.6046677, -1.1773552, 7.2309613, -2.2290187]
> , [-1.1080669, -1.2366911, 1.6373565, -2.2290187, 4.5027013] ]

l = chol psd

:p l
> [ [2.2383366, 0.0, 0.0, 0.0, 0.0]
> , [3.929441e-2, 2.1275387, 0.0, 0.0, 0.0]
> , [0.3309917, 0.6320964, 2.052588, 0.0, 0.0]
> , [-3.3426132e-2, -0.7536193, -0.33612752, 2.5590858, 0.0]
> , [-0.49504036, -0.57213473, 1.053721, -0.9075714, 1.4128994] ]

reconst = for i. for j. psd.i.j - (mmp l (transpose l)).i.j

:p reconst
> [ [-8.881784e-16, 0.0, 1.110223e-16, 0.0, 0.0]
> , [0.0, 0.0, -2.220446e-16, 0.0, 0.0]
> , [1.110223e-16, -2.220446e-16, -8.881784e-16, 0.0, 0.0]
> , [0.0, 0.0, 0.0, 0.0, 0.0]
> , [0.0, 0.0, 0.0, 0.0, 0.0] ]
