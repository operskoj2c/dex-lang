
EState : Type -> Type = \d. d=>Real
Time :Type = Real
Dynamics : Type -> Type = \d. EState d -> EState d


eulerStep : Ref h (EState d) -> Dynamics d -> Time -> {State h} Unit =
  \sRef dyn dt.
    s = get sRef
    dsdt = dyn s
    s' = for i. s.i + dsdt.i * dt
    sRef := s'

euler : Int -> Dynamics d -> EState d -> Time -> EState d =
  \n f x0 dt.
    snd $ withState x0 \sRef.
      for i:(Fin n). eulerStep sRef f dt

myDyn : Dynamics d = \d. d

s0 = [1.0]

:p euler 100000 myDyn s0 0.00001
> [2.7182682]
