'# Mandelbrot set

'First, we implement complex arithmetic

Complex : Type = (Real & Real)

cadd : Complex -> Complex -> Complex =
  \(x1, y1) (x2, y2). (x1 + x2, y1 + y2)

cmul : Complex -> Complex -> Complex =
  \(x1, y1) (x2, y2). (x1 * x2 - y1 * y2, x1 * y2 + x2 * y1)

cabs : Complex -> Real =
  \(x, y). x * x + y * y

czero : Complex = (0.0, 0.0)

'The actual escape time algorithm

update : Complex -> Complex -> Complex =
  \c z. cadd c (cmul z z)

tol = 2.0
inBounds : Complex -> Bool =
  \z. cabs z < tol

escapeTime : Complex -> Real =
  \c. fst $ fold (0.0, czero) $ \i:(Fin 1000) (n, z).
     z' = update c z
     (n + b2r (inBounds z'), z')

'Evaluate on a grid and plot the results

xs = linspace (Fin 300) -2.0 1.0
ys = linspace (Fin 200) -1.0 1.0

escapeGrid = for j i. escapeTime (xs.i, ys.j)

:plotmat escapeGrid
> <graphical output>
