g : a -> a
g x = x

:t g
> A a. (a -> a)

:t
  f x:Int = x
  f 1
> Int

:t
   f x:Real = x
   f 1
> Type error:
> Expected: Real
>   Actual: Int
> In: 1
>
>    f 1
>      ^

g1 : (a -> Int) -> (a -> Int)
g1 x = x

:t g1
> A a. ((a -> Int) -> (a -> Int))

g2 : a -> a
g2 x = iadd x x
> Type error:
> Expected: Int
>   Actual: a
> In: x
>
> g2 x = iadd x x
>             ^^

h : (a -> b) -> (a -> b)
h x = x


:t h
> A a b. ((a -> b) -> (a -> b))

fun : a -> a
fun x = sin x
> Type error:
> Expected: Real
>   Actual: a
> In: x
>
> fun x = sin x
>             ^
