f :: A a b. a -> a
f x = x

> Parse error: 1:19:
>   |
> 1 | f :: A a b. a -> a
>   |                   ^
> Type error: Ambiguous kind for b

-- y :: A a. a => a
-- y = 1
--
-- > Parse error: 1:17:
-- >   |
-- > 1 | y :: A a. a => a
-- >   |                 ^
-- > Type error: Conflicting kinds for [a]
:t let g :: A a. a -> a ;
       g x = x
    in g

> A a. (a -> a)


:t let f x::Int = x in f 1

> Int


:t let f x::Real = x in f 1

> Type error: 
> Expected: Real
>   Actual: Int
> In: 1
> 
> :t let f x::Real = x in f 1
>                           ^

:t let g :: A a. (a -> Int) -> (a -> Int) ;
       g x = x
    in g

> A a. ((a -> Int) -> (a -> Int))


:t let g :: A a. a -> a ;
       g x = iadd x x
    in g

> Type error: 
> Expected: Int
>   Actual: T_1
> In: x
> 
> :t let g :: A a. a -> a ;
>        g x = iadd x x
>                   ^^
>     in g

h :: A a b. (a -> b) -> (a -> b)
h x = x


-- TODO: binders are flipped.. is this a bug or just a debruijn thing?
:t h

> A b a. ((a -> b) -> (a -> b))


fun :: A a. a -> a
fun x = sin x

> Type error: 
> Expected: Real
>   Actual: T
> In: x
> 
> fun :: A a. a -> a
> fun x = sin x
>             ^

