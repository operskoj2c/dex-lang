:llvm let x = unpack iota 100
   in sum (for i: x.i)

sum = fold add 0

:p 1 + 2

:p let double = lam x: x * 2
   in double 10

:p doubleit 3

:p let x = unpack iota 100
   in sum (for i: x.i)

:p let vdot x y = sum (for i: x.i * y.i * 2);
       x = unpack iota 3
   in vdot x x

:p let x = unpack iota 3;
       y = for i j: x.i * x.j
   in sum (for i: sum (y.i))

:p hash 1 3

:p randint (hash 0 0) 10

:p let x = unpack iota 10000;
       key = hash 0
   in sum (for i: randint (key x.i) 10)

x = unpack iota 7

f = lam y: sum x + y

:p f 3

:p x

:p fold (lam x y: x + y) 0 x

:p 10 - 6

-- TODO: fix signed ints
:p 6 - 10

:p (lam (x, y): x + y) (1, 2)

:p let f (x, y) = x y
   in f (lam x: x, 1)

:p let (x,y) = ((1,2),3) in
       let (x1, x2) = x in x1 + x2 + y

-- :p let f (x, y) = x + 2 * y;
--        z.i = (x.i, x.i * x.i)
--    in sum (for i: f z.i)
