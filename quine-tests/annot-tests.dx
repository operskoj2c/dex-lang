:t g :: a -> a
   g x = x
   g
> A a. (a -> a)


:t f x::Int = x; f 1
> Int


:t f x::Real = x; f 1
> Type error:
> Expected: Real
>   Actual: Int
> In: 1
>
> :t f x::Real = x; f 1
>                     ^

:t g :: (a -> Int) -> (a -> Int)
   g x = x
   g
> A a. ((a -> Int) -> (a -> Int))


:t g :: a -> a
   g x = iadd x x
   g
> Type error:
> Expected: Int
>   Actual: a
> In: x
>
>    g x = iadd x x
>               ^^

h :: (a -> b) -> (a -> b)
h x = x


:t h
> A b a. ((b -> a) -> (b -> a))


fun :: a -> a
fun x = sin x
> Type error:
> Expected: Real
>   Actual: a
> In: x
>
> fun x = sin x
>             ^
