
-- repeated vars in patterns not allowed
:p let (x, x) = (1, 1) in x

> Variable redefined: x

:p let f (x, x) = x in f (1, 1)

> Variable redefined: x

-- TODO: re-enable if we choose to allow non-peer shadowing
-- -- shouldn't cause error even though it shadows x elsewhere
-- x = 50

-- :p let x = 100 in (let x = 200 in x)

-- > [200]

arr = 10

-- TODO: enable when we handle this case
-- _ = 10
-- _ = 10 -- underscore shadows allowed

arr = 20
> Variable redefined: arr

:p arr

> 10

-- testing top-level shadowing
f :: a -> a  -- TODO: test the error messages when annotation is missing
f x = x

x = 1

:p f 1

> 1
